.. _delete_guide_golang:

=================
Delete a Document
=================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

In this guide, you can learn how to remove documents from your MongoDB
collections using delete operations.

Sample Data
~~~~~~~~~~~

To run the example in this guide, load these documents into the
``ratings`` collection of the ``tea`` database with the following
snippet:

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/delete.go
   :language: go
   :dedent:
   :start-after: begin insertDocs
   :end-before: end insertDocs

.. include:: /includes/fundamentals/automatic-db-coll-creation.rst

Each document contains a rating for a type of tea, which corresponds to
the ``type`` and ``rating`` fields.

Delete Operations
-----------------

Use **delete operations** to remove data from MongoDB. Delete operations
consist of the following functions:

- ``DeleteOne()``, which deletes *the first document* that matches the filter
- ``DeleteMany()``, which deletes *all* documents that match the filter

.. tip::

   If one document matches your filter when running the ``DeleteMany()``
   function, it's equivalent to running the ``DeleteOne()`` function.

Parameters
~~~~~~~~~~

The ``DeleteOne()`` and ``DeleteMany()`` functions expect you to pass a
``Context`` type and a ``non-nil`` query filter specifying which
documents to match.

They both optionally take a ``DeleteOptions`` type as a third parameter,
which represents options you can use to configure the delete operation.
If you don't specify a ``DeleteOptions``, the driver uses the default
values for each option.

The ``DeleteOptions`` type allows you to configure options with the
following functions:

.. list-table::
   :widths: 30 70
   :header-rows: 1

   * - Function
     - Description

   * - ``SetHint()``
     - | The index to use to scan for documents to delete.
       | Default: ``nil``

   * - ``SetCollation()``
     - | The type of language collation to use when sorting results.
       | Default: ``nil``

Return Value
~~~~~~~~~~~~

The ``DeleteOne()`` and ``DeleteMany()`` functions return a
``DeleteResult`` type. This type contains the ``DeletedCount`` property,
which states the number of documents deleted. If there are no matches to
your filter, no document gets deleted and ``DeletedCount`` is ``0``.

Example
```````

The following example performs the following with the ``DeleteMany()``
function:

- Matches and deletes documents where the ``rating`` is greater than ``8``
- Specifies the function to use the ``_id`` as the index

.. literalinclude:: /includes/fundamentals/code-snippets/CRUD/delete.go
   :language: go
   :dedent:
   :start-after: begin deleteMany
   :end-before: end deleteMany

After running the preceding example, the output resembles the following:

.. code-block:: none
   :copyable: false

   Number of documents deleted: 2

.. tip::

   If the preceding example used the ``DeleteOne()`` function instead of
   ``DeleteMany()``, the driver would delete the first of the two
   matched documents.

Additional Information
----------------------

For runnable examples of the delete operations, see the following usage
examples:

- :doc:`Delete a Document </usage-examples/deleteOne>`
- :doc:`Delete Multiple Documents </usage-examples/deleteMany>`

For more information on performing the operations mentioned, see the
following guides:

- :doc:`Specify a Query </fundamentals/crud/query-document>`

For information about how the driver uses Context, see our guide on
:doc:`Context </fundamentals/context>`.

.. For more information about specifying hints, see our guide on <TODO: Indexes>.
.. For more information about collations, see our guide on <TODO: Collations>.

API Documentation
~~~~~~~~~~~~~~~~~

For more information on any of the functions or types discussed in this
guide, see the following API Documentation:

- `DeleteOne() <{+api+}/mongo#Collection.DeleteOne>`__
- `DeleteMany() <{+api+}/mongo#Collection.DeleteMany>`__
- `DeleteOptions <{+api+}/mongo/options#DeleteOptions>`__
- `DeleteResult <{+api+}/mongo#DeleteResult>`__

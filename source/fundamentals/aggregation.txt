===========
Aggregation
===========

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

Aggregation operations process data in your MongoDB collections and return computed results. MongoDB's Aggregation
framework is modeled on the concept of data processing pipelines. Documents enter a multi-staged pipeline that
transforms the documents into an aggregated result.

Another way to think of aggregation is like a car factory. Within the car factory is an assembly line, along which
are assembly stations with specialized tools to do a specific job, like drills and welders. Raw parts enter the factory,
which are then transformed and assembled into a finished product.

The **aggregation pipeline** is the assembly line, **aggregation stages** are the assembly stations, and
**operator expressions** are the specialized tools.

Aggregation and Find Operations Compared
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Using ``find`` operations, you can:

- select *what* documents to return
- select *what* fields to return
- sort the results

Using ``aggregation`` operations, you can:

- perform all ``find`` operations
- rename fields
- calculate fields
- summarize data
- group values

Aggregation operations have some :manual:`limitations <core/aggregation-pipeline-limits/>` you must keep in mind:

- Returned documents must not violate the :manual:`BSON document size limit </reference/limits/#BSON-Document-Size>`
  of 16 megabytes.

- Pipeline stages have a memory limit of 100 megabytes by default. If required, you may exceed this limit by using
  the `allowDiskUse <https://mongodb.github.io/mongo-java-driver/4.2/apidocs/mongodb-driver-sync/com/mongodb/client/AggregateIterable.html#allowDiskUse(java.lang.Boolean)>`__
  method. TODO: Update the link here!!

  .. important:: ``$graphLookup`` exception

     The :manual:`$graphLookup </operator/aggregation/graphLookup/>` stage has a strict memory limit of 100 megabytes
     and will ignore ``allowDiskUse``.


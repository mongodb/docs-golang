=================
Update a Document
=================

.. default-domain:: mongodb

You can update a document in a collection by using the ``UpdateOne()``
method.

Example
-------

.. include:: /includes/usage-examples/run-example-tip.rst

The following example performs the following on the ``restaurants``
collection:

- Matches a document with a specific ``_id``
- Creates a new field in the matched document called ``avg_rating`` with a value of 4.4

.. literalinclude:: /includes/usage-examples/code-snippets/updateOne.go
   :start-after: begin updateone
   :end-before: end updateone
   :emphasize-lines: 6
   :language: go
   :dedent:

`Click here <{+example+}/updateOne.go>`__ to see a fully runnable example.

Expected Result
---------------

After you run the preceding example, you can find the following updated
document in the ``restaurants`` collection:

.. code-block:: json
   :copyable: false

   // result truncated
   {
      "_id" : ObjectId("5eb3d668b31de5d588f42a7a"),
      ...
      "name" : "Green House Cafe",
      "restaurant_id" : "40372112",
      "avg_rating" : 4.4
   }

For an example on how to find a document, see our :doc:`Find
a Document Usage Example </usage-examples/findOne>`.

Additional Information
----------------------

For more information on replacing documents, specifying query filters, and
handling potential errors, see our guide on :ref:`changing a document <change_document_golang>`.

For more information on update operators,
see the :manual:`MongoDB update operator reference documentation
</reference/operator/update/#update-operators>`.

API Documentation
~~~~~~~~~~~~~~~~~

`UpdateOne() <{+api+}/mongo#Collection.UpdateOne>`__

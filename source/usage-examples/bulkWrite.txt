=======================
Perform Bulk Operations
=======================

.. default-domain:: mongodb

You can perform bulk write operations on a collection using the
``BulkWrite()`` method.

The following example specifies a slice of ``WriteModels`` and an option
to the ``BulkWrite()`` method, which performs the following in order:

- Match a document where the ``title`` is "Record of a Shriveled Datum" and replace it with a new document
- Match a document where the ``title`` is "Dodging Greys" and update that field to "Dodge The Greys"

.. include:: /includes/usage-examples/run-example-tip.rst

.. literalinclude:: /includes/usage-examples/code-snippets/bulk.go
   :start-after: begin bulk
   :end-before: end bulk
   :emphasize-lines: 10
   :language: go
   :dedent:

Click `here <{+example+}/bulk.go>`__ to see a fully runnable example.

Expected Result
---------------

After you run the preceding code snippet, you should be able to find the
document in the ``haikus`` collection:

.. code-block:: json
   :copyable: false

   {
      "_id" : ObjectId("..."),
      "title" : "Dodge The Greys",
      "text" : "When there're no matches, no longer need to panic. You can use upsert."
   }

For an example on how to find a document, see our :doc:`Find
One Usage Example </usage-examples/findOne>`.

Additional Information
----------------------

For more information on performing bulk write operations on a collection
and handling potential errors, see our guide on <TODO: Bulk Write
Fundamentals>.

For more information, see our :manual:`Bulk Write Operations
</core/bulk-write-operations/>` page.

API Documentation
~~~~~~~~~~~~~~~~~

- `BulkWrite() <{+api+}/mongo#Collection.BulkWrite>`__
- `NewUpdateOneModel() <{+api+}/mongo#NewUpdateOneModel>`__
- `NewReplaceOneModel() <{+api+}/mongo#NewReplaceOneModel>`__

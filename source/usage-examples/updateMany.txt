=========================
Update Multiple Documents
=========================

.. default-domain:: mongodb

You can update multiple documents in a collection by using the ``UpdateMany()``
method.

Example
-------

.. include:: /includes/usage-examples/run-example-tip.rst

The following example performs the following on the
``listingsAndReviews`` collection:

- Matches documents in which the market field of the address subdocument, ``address.market`` is "Sydney"
- Updates the ``price`` in the matched documents by 1.15 times

.. literalinclude:: /includes/usage-examples/code-snippets/updateMany.go
   :start-after: begin updatemany
   :end-before: end updatemany
   :emphasize-lines: 5
   :language: go
   :dedent:

`Click here <{+example+}/updateMany.go>`__ to see a fully runnable example.

Expected Result
---------------

After you run the preceding example, you can find the following updated
documents in the ``listingsAndReviews`` collection:

.. code-block:: json
   :copyable: false

   // results truncated
   ...
   { "_id" : "10091713", ... , "name" : "Surry Hills Studio", ... , "price" : 181.00, ... },
   { "_id" : "9908871", ... , "name" : "Family friendly beach house", ... , "price" : 751.00, ... },
   { "_id" : "20989061", ... , "name" : "Big and sunny Narraben room", ... , "price" : 60.00, ... },
   ...

For an example on how to find multiple documents, see our :doc:`Find
Multiple Documents Usage Example </usage-examples/find>`.

Additional Information
----------------------

For more information on replacing documents, specifying query filters, and
handling potential errors, see our guide on :ref:`changing a document <change_document_golang>`.

For more information on update operators,
see the :manual:`MongoDB update operator reference documentation
</reference/operator/update/#update-operators>`.

API Documentation
~~~~~~~~~~~~~~~~~

`UpdateMany() <{+api+}/mongo#Collection.UpdateMany>`__

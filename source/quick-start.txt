.. _golang-quickstart:

=====================
Go Driver Quick Start
=====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: tutorial, get started, code example

.. include:: /includes/quick-start/overview.rst

Set Up Your Project
-------------------

Use Go Mod to Initialize a Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. procedure::
   :style: connected

   .. step:: Create and initialize your project

      Create a new directory and initialize your project using ``go mod``.

      .. code-block:: shell

         mkdir go-quickstart
         cd go-quickstart
         go mod init go-quickstart

   .. step:: Add the Go driver as a dependency

      Use ``go get`` to add the Go driver as a dependency.

      .. code-block:: shell

         go get go.mongodb.org/mongo-driver/v2/mongo

   .. step:: Add other dependencies

      Use ``go get`` to add any necessary dependencies. This Quick Start
      uses the ``godotenv`` package to read a MongoDB connection string
      from an environment variable to avoid embedding credentials within
      source code.

      .. code-block:: shell

         go get github.com/joho/godotenv

Create a MongoDB Cluster
------------------------

.. include:: /includes/quick-start/atlas-setup.rst

Query Your MongoDB Cluster from Your Application
------------------------------------------------

.. procedure::
   :style: connected

   .. step:: Create a new file

      Create a new file called ``main.go`` in the base directory of your project.

      .. code-block:: shell

         touch main.go

   .. step:: Add your connection string

      Specify your MongoDB Atlas connection string as the value of the
      ``uri`` variable or create an environment variable called
      ``MONGODB_URI`` and set your Atlas connection string as its value.

      .. code-block:: bash

         export MONGODB_URI='<your atlas connection string>'

      .. note::

         Make sure to replace the "<password>" section of the connection string with
         the password you created for your user that has **atlasAdmin** permissions.

   .. step:: Create your Go application

      Copy and paste the following code into your ``main.go`` file. This code
      runs a query on your sample dataset in MongoDB Atlas.

      .. literalinclude:: /includes/quick-start/main.go
         :language: go
         :dedent: 3

   .. step:: Run your application

      Run the sample code with the following command from your command line:

      .. code-block:: bash

         go run main.go

      .. include:: /includes/quick-start/query-output.rst

      .. tip::

         If your output is empty, ensure you have loaded the
         :atlas:`sample datasets </sample-data/>` into your cluster.

After you complete these steps, you have a working application that uses
the Go driver to connect to your MongoDB cluster, runs a query on the
sample data, and prints out the result.

Next Steps
----------

.. include:: /includes/quick-start/next-steps.rst

.. _golang-quickstart:

=====================
Go Driver Quick Start
=====================

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. facet::
   :name: genre
   :values: tutorial

.. meta::
   :keywords: tutorial, get started, code example

.. include:: /includes/quick-start/overview.rst

Set Up Your Project
-------------------

Use Go Mod to Initialize a Project
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. procedure::
   :style: connected

   .. step:: Create and initialize your project

      Create a new directory and initialize your project using ``go mod``.

      .. code-block:: shell

         mkdir go-quickstart
         cd go-quickstart
         go mod init go-quickstart

   .. step:: Add the Go driver as a dependency

      Use ``go get`` to add the Go driver as a dependency.

      .. code-block:: shell

         go get go.mongodb.org/mongo-driver/v2/mongo

   .. step:: Add other dependencies

      Use ``go get`` to add any necessary dependencies. This Quick Start
      uses the ``godotenv`` package to read a MongoDB connection string
      from an environment variable to avoid embedding credentials within
      source code.

      .. code-block:: shell

         go get github.com/joho/godotenv

Create a MongoDB Cluster
------------------------

.. include:: /includes/quick-start/atlas-setup.rst

Query Your MongoDB Cluster from Your Application
------------------------------------------------

Next, create a file to contain your application called ``main.go``
in the base directory of your project. Use the following sample
code to run a query on your sample dataset in MongoDB Atlas.

Specify your MongoDB Atlas connection string as the value of the
``uri`` variable, or create an environment variable called
``MONGODB_URI`` and set your Atlas connection string as its value.

.. code-block:: bash

   export MONGODB_URI='<your atlas connection string>'

.. note::

   Make sure to replace the "<password>" section of the connection string with
   the password you created for your user that has **atlasAdmin** permissions.

.. literalinclude:: /includes/quick-start/main.go
   :language: go
   :dedent:

Run the sample code with the following command from your command line:

.. code-block:: bash

   go run main.go

.. include:: /includes/quick-start/query-output.rst

.. tip::

   If your output is empty, ensure you have loaded the
   :atlas:`sample datasets </sample-data/>` into your cluster.

After completing this step, you have a working application that uses
the Go driver to connect to your MongoDB cluster, run a query on the
sample data, and print out the result.

Next steps
----------

.. include:: /includes/quick-start/next-steps.rst
